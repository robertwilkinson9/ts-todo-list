const express = require('express');
const cors = require('cors');
const knex = require('knex');
require('dotenv').config();

const db = knex({
    client: 'pg',
    connection: {
        host: process.env.DATABASE_HOST,
        user: process.env.DATABASE_USERNAME,
        password: process.env.DATABASE_PASSWORD,
        database: process.env.DATABASE,
    },
});

const app = express();

app.use(express.urlencoded({ extended: false }));
app.use(express.json());

// CORS implemented so that we don't get errors when trying to access the server from a different server location
app.use(cors());
//cors({origin: ['http://localhost:3000', 'http://127.0.0.1:3000', 'http://localhost:5000', 'http://127.0.0.1:5000']})

// GET: Fetch all movies from the database
app.get('/', (req, res) => {
    db.select('*')
        .from('items')
        .then((data) => {
            console.log(data);
            res.set('Access-Control-Allow-Origin', '*');
            res.json(data);
        })
        .catch((err) => {
            console.log(err);
        });
});

// GET: Fetch movie by movieId from the database
app.get('/:itemId', (req, res) => {
    const itemId = req.params.itemId;
    db.select('*')
        .from('items')
        .where('id', '=', itemId)
        .then((data) => {
            console.log(data);
            res.json(data);
        })
        .catch((err) => {
            console.log(err);
        });
});

// POST: Create todo items and add them to the database
app.post('/add-todo', (req, res) => {
    const { due, summary, text } = req.body;
    db('items')
        .insert({
            due: due,
            summary: summary,
            text: text,
        })
        .then(() => {
            console.log('TODO Added');
            return res.json({ msg: 'Todo Added' });
        })
        .catch((err) => {
            console.log(err);
        });
});

// DELETE: Delete todo item by id from the database
app.delete('/delete-todo-item', (req, res) => {
    const itemId = req.body;
    const itemIdToDelete = Number(itemId.id);
    console.log(itemIdToDelete);
    db('items')
        .where('id', '=', itemIdToDelete)
        .del()
        .then(() => {
            console.log('Todo Item Deleted');
            return res.json({ msg: 'Todo Item Deleted' });
        })
        .catch((err) => {
            console.log(err);
        });
});

// PUT: Update todo item by itemId from the database
//app.put('/update-todo item', (req, res) => { db('items')
//        .where('todo id', '=', 1)
//        .update({ todo summary: 'Goldeneye' })
//        .then(() => {
//            console.log('Todo Item Updated');
//            return res.json({ msg: 'Todo Item Updated' });
//        })
//        .catch((err) => {
//            console.log(err);
//        });
//});
//
const port = process.env.PORT || 5000;

app.listen(port, () => console.log(`Server running on port ${port}, http://localhost:${port}`));









